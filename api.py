from typing import Optional
from models import *
from fastapi import FastAPI, HTTPException, status
from pydantic import *
from schemas import *
from fastapi.middleware.cors import CORSMiddleware
from pony import *

# Command to initialize server
# uvicorn main:app --reload

# Documentation and manual testing (generated by FastAPI):
# http://localhost:8000/docs

app = FastAPI()

origins = [
    "http://localhost:3000",
    "https://localhost:3000",
    "http://127.0.0.1:3000",
    "https://127.0.0.1:3000",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


@app.get("/")
async def hello_world():
    return "Hello World"


@app.get("/game/{gameID}")
async def get_game(gameID: int):
    response = None
    with db_session:
        response = Game.get(id=gameID)
    if not response:
        raise HTTPException(
            status_code=status.HTTP_404_NOT_FOUND, detail="game not found"
        )
    return GameInDB.from_orm(response)


@app.get("/game/")
async def get_game_list():
    with db_session:
        gamesList = Game.select()
        response = [GameInDB.from_orm(p) for p in gamesList]
    return response


@app.post("/game/", response_model=GameOUT, status_code=status.HTTP_201_CREATED)
async def create_game(newGame: GameIN):
    with db_session:
        gameData = Game(name=newGame.name)
    return gameData
